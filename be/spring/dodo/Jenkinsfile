pipeline{
    agent any

    stages {

        stage("Set Variable") {
            steps {
                script {
                    SSH_CONNECTION = "ubuntu@j8b104.p.ssafy.io"
                    CONTAINER_NAME = "dodo-spring"
                    IMAGE_NAME = "eello/dodo-spring"
                    PROJECT_PATH = "./be/spring/dodo"
                }
            }
        }

        stage('Build Gradle') {
            steps {
                dir("${PROJECT_PATH}") {
                    sh 'pwd'
                    sh "chmod +x gradlew"
                    sh "./gradlew clean build -x test"
                    sh 'ls -al ./build'
                }
            }
        }
        stage('Docker build image') {
            steps {
                dir("${PROJECT_PATH}") {
                    sh 'pwd'
                    sh "docker build --no-cache -t eello/dodo-spring:latest ."
                }
            }
        }
        stage('Docker push image') {
            steps {
                withCredentials([string(credentialsId: 'dockerHubPwd', variable: 'dockerHubPwd')]) {
                    sh "docker login -u eello -p ${dockerHubPwd}"
                }
                sh "docker push ${IMAGE_NAME}"
            }

            post {
                success {
                    echo 'success'
                }

                failure {
                    echo 'failed'
                }
            }
        }
        stage('Run Container on SSH Dev Server') {
            steps {
                echo 'SSH'
                sshagent (credentials: ['ssh-agent']) {
// 					sh "ssh -o StrictHostKeyChecking=no ${SSH_CONNECTION} 'whoami'"
//                     sh "ssh -o StrictHostKeyChecking=no ${SSH_CONNECTION} 'docker ps -q --filter name=${CONTAINER_NAME} | grep -q . && docker rm -f \$(docker ps -aq --filter name=${CONTAINER_NAME})'"
                    sh "ssh -o StrictHostKeyChecking=no ${SSH_CONNECTION} 'docker rm -f ${CONTAINER_NAME}'"
                    sh "ssh -o StrictHostKeyChecking=no ${SSH_CONNECTION} 'docker rmi -f ${IMAGE_NAME}'"
					sh "ssh -o StrictHostKeyChecking=no ${SSH_CONNECTION} 'docker pull ${IMAGE_NAME}:latest'"
                    sh "ssh -o StrictHostKeyChecking=no ${SSH_CONNECTION} 'docker run -d --name ${CONTAINER_NAME} --add-host host.docker.internal:host-gateway -p 8080:8080 ${IMAGE_NAME}'"
                }

            }

        }

    }
}